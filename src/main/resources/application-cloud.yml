spring:
  datasource:
    url: ${AZURE_POSTGRESQL_URL:jdbc:postgresql://localhost:5432/mydb}
    username: ${AZURE_POSTGRESQL_USERNAME:username}
    password: ${AZURE_POSTGRESQL_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AZURE_JWT_ISSUER_URI:http://localhost:9000/}
          jwk-set-uri: ${AZURE_JWT_PROTOCOL_URI:http://localhost:9000/protocol}
  ai:
    vectorstore:
      cosmosdb:
        endpoint: ${AZURE_COSMOSDB_ENDPOINT:http://someendpoint.com}
        key: ${AZURE_COSMOSDB_KEY:somekey}
        database-name: ${AZURE_COSMOSDB_DATABASE:test-database}
        container-name: ${AZURE_COSMOSDB_CONTAINER:test-container}
        partition-key-path: ${AZURE_COSMOSDB_PARTITION_KEY_PATH:/id}
        metadata-fields: ${AZURE_COSMOSDB_METADATA_FIELDS:field1, field2}
        vector-store-throughput: ${AZURE_COSMOSDB_VS_THROUGHPUT:1000}
        vector-dimensions: ${AZURE_COSMOSDB_VS_DIMENSIONS:1536}
    openai:
      api-key: ${OPENAI_API_KEY:somekey}
      embedding:
        options:
          model: ${OPENAI_API_MODEL:somemodel}





jwt:
  auth:
    converter:
      resource-id: ${JWT_RESOURCE_ID:resource}
      principal-attribute: ${JWT_PRINCIPAL_ATTRIBUTE:attribute}

webhooks:
  zapier:
    notification: ${WEBHOOKS_ZAPIER_NOTIFICATION:http://localhost:9998}
    chatbot: ${WEBHOOKS_ZAPIER_CHATBOT:http://localhost:9999}

keycloak:
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080}
  realm: ${KEYCLOAK_REALM:master}
  username: ${KEYCLOAK_USERNAME:admin}
  password: ${KEYCLOAK_PASSWORD:admin}
  client-id: ${KEYCLOAK_CLIENT_ID:admin-cli}
