spring:
  datasource:
    url: ${AZURE_POSTGRESQL_URL:jdbc:postgresql://localhost:5432/mydb}
    username: ${AZURE_POSTGRESQL_USERNAME:username}
    password: ${AZURE_POSTGRESQL_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AZURE_JWT_ISSUER_URI:http://localhost:9000/}
          jwk-set-uri: ${AZURE_JWT_PROTOCOL_URI:http://localhost:9000/protocol}
  ai:
    vectorstore:
      cosmosdb:
        endpoint: ${AZURE_COSMOSDB_ENDPOINT:http://someendpoint.com}
        key: ${AZURE_COSMOSDB_KEY:somekey}
        database-name: ${AZURE_COSMOSDB_DATABASE:test-database}
        containers:
          chunks:
            container-name: chunks
            partition-key-path: ${AZURE_COSMOSDB_CHUNKS_PARTITION_KEY_PATH:/id}
            metadata-fields: topic,subtopic
            vector-store-throughput: 1000
            vector-dimensions: 1536
          files:
            container-name: files
            partition-key-path: ${AZURE_COSMOSDB_FILES_PARTITION_KEY_PATH:/id}
            metadata-fields: accountId
            vector-store-throughput: 1000
            vector-dimensions: 1536
    openai:
      api-key: ${OPENAI_API_KEY:somekey}
      options:
        model: ${OPENAI_API_MODEL:somemodel}
      embedding:
        options:
          model: ${OPENAI_API_EMBEDDING_MODEL:somemodel}

chat:
  client:
    advisors:
      masking:
        enabled: ${CHAT_CLIENT_ADVISORS_MASKING_ENABLED:true}
      rag:
        enabled: ${CHAT_CLIENT_ADVISORS_RAG_ENABLED:true}
        similarity-threshold: ${CHAT_CLIENT_ADVISORS_RAG_SIMILARITY_THRESHOLD:0.1}
      files:
        enabled: ${CHAT_CLIENT_ADVISORS_FILES_ENABLED:true}

google:
  service-account:
    credentials: ${GOOGLE_SERVICE_ACCOUNT_CREDENTIALS_BASE64:test-credentials}

microsoft:
  entra:
    id:
      client-id: ${MICROSOFT_ENTRA_ID_CLIENT_ID:client-id}
      client-secret: ${MICROSOFT_ENTRA_ID_CLIENT_SECRET:client-secret}
      tenant-id: ${MICROSOFT_ENTRA_ID_TENANT_ID:tenant-id}

jwt:
  auth:
    converter:
      resource-id: ${JWT_RESOURCE_ID:resource}
      principal-attribute: ${JWT_PRINCIPAL_ATTRIBUTE:attribute}

keycloak:
  auth-server-url: ${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8080}
  username: ${KEYCLOAK_USERNAME:admin}
  password: ${KEYCLOAK_PASSWORD:admin}
  realm:
    master: ${KEYCLOAK_REALM_MASTER:master}
    smym: ${KEYCLOAK_REALM_SMYM:smym}
  client:
    admin: ${KEYCLOAK_CLIENT_ADMIN:admin-cli}
    smym: ${KEYCLOAK_CLIENT_SMYM:smym}

cron:
  sessions:
    morning:
      create: ${CRON_SESSIONS_MORNING_CREATE:0 0 10 ? * MON-FRI}
      update: ${CRON_SESSIONS_MORNING_UPDATE:0 0 11 ? * MON-FRI}
    lunch:
      create: ${CRON_SESSIONS_LUNCH_CREATE:0 30 13 ? * MON-FRI}
      update: ${CRON_SESSIONS_LUNCH_UPDATE:0 30 14 ? * MON-FRI}
    afternoon:
      create: ${CRON_SESSIONS_AFTERNOON_CREATE:0 0 15 ? * MON-FRI}
      update: ${CRON_SESSIONS_AFTERNOON_UPDATE:0 0 16 ? * MON-FRI}
  leaderboard:
    reset: ${CRON_LEADERBOARD_RESET:0 0 12 ? * 5#1}
  drive:
    sync: ${CRON_DRIVE_SYNC:0 0 18 ? * 6}

notification:
  user-id: ${NOTIFICATION_USER_ID:notification-user-id}
  user-email: ${NOTIFICATION_USER_EMAIL:notification@user.com}
  user-name: ${NOTIFICATION_USER_NAME:Notification User}

frontend:
  url: ${FRONTEND_URL:https://scottmakesyoumove.com}

app:
  security:
    enabled: ${APP_SECURITY_ENABLED:true}
